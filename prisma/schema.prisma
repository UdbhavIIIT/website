generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  email        String   @unique
  password     String
  phone_number String?
  batch        String?
  isVerified   Boolean  @default(false)
  teamId       String   @db.ObjectId
  role         Roles    @default(USER)
  isTeamLeader Boolean  @default(false)
  team         Team?    @relation(fields: [teamId], references: [id], onDelete: SetNull)
  createdTeams Team[]   @relation("TeamCreator")
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Team {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  collegeId  String    @db.ObjectId
  isVerified Boolean   @default(false)
  ClubName   String?
  points     Int       @default(0)
  maxMembers Int       @default(5)
  isActive   Boolean   @default(true)
  users      User[]
  project    Project[]
  creatorId  String    @db.ObjectId
  creator    User      @relation("TeamCreator", fields: [creatorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  college    College?  @relation(fields: [collegeId], references: [id])
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model College {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  mediaLink    String
  logoLink     String
  details      String
  eventDetails String
  team         Team[]
  organizers   String[]
}

type Project {
  name         String
  description  String
  mediaLinks   String[]
  projectLinks String[]
}

enum Roles {
  ADMIN
  USER
}
